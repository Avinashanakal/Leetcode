# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def middleNode(self, head: ListNode) -> ListNode:
        
        slow=fast=head
        while fast and fast.next:
            fast,slow=fast.next.next ,slow.next
        
        return slow
---------------------------------C++ solution--------------------------
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
            ListNode* slow=head;
            ListNode* fast=head;
            while(fast && fast->next){
                slow=slow->next;
                fast=fast->next->next;
            }
            return slow;
    }
};
