class Solution {
public:
    bool checkValidString(string s) {
        int n=s.length();
        
        int open=0, close=0;
        for(int i=0;i<n;++i){
            if(s[i]=='*'||s[i]=='(')
                open++;
            else
                open--;
            if(s[n-1-i]=='*'||s[n-1-i]==')')
                close++;
            else
                close--;
            
            if(open<0||close<0)
                return false;
        }
        
        return true;
    }
};
----------------------------2 stacks approach---------------------------
class Solution {
public:
        bool checkValidString(string s) {
        stack<int> open,ast;
        for(int i=0;i<s.length();i++)
        {
          if(s[i] == ')')
          {
              if(!open.empty())
                  open.pop();
              else if(!ast.empty()) 
                  ast.pop();
              else 
                  return false;
          }
          else if(s[i] == '(') 
              open.push(i);
          else 
              ast.push(i);
      }
      while(!open.empty() && !ast.empty())
      {
         if(open.top() > ast.top())
             return false;
          open.pop();
          ast.pop();
      }
        return open.empty();
    }
};
